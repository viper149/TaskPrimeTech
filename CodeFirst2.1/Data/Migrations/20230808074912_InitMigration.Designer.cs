// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace CodeFirst.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230808074912_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeFirst.Models.BloodGroup", b =>
                {
                    b.Property<int>("BGId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BGName")
                        .IsRequired();

                    b.HasKey("BGId");

                    b.ToTable("BloodGroups");
                });

            modelBuilder.Entity("CodeFirst.Models.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatName");

                    b.HasKey("CatId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CodeFirst.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .IsRequired();

                    b.Property<int?>("BGId");

                    b.Property<string>("BGroup")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("SCATSubCatId");

                    b.Property<int?>("SubCat")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BGId");

                    b.HasIndex("SCATSubCatId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CodeFirst.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCatId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatId");

                    b.Property<string>("SubCatName");

                    b.HasKey("SubCatId");

                    b.HasIndex("CatId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("CodeFirst.Models.Employee", b =>
                {
                    b.HasOne("CodeFirst.Models.BloodGroup", "BG")
                        .WithMany("EmployeesList")
                        .HasForeignKey("BGId");

                    b.HasOne("CodeFirst.Models.SubCategory", "SCAT")
                        .WithMany("EmployeesList")
                        .HasForeignKey("SCATSubCatId");
                });

            modelBuilder.Entity("CodeFirst.Models.SubCategory", b =>
                {
                    b.HasOne("CodeFirst.Models.Category", "CAT")
                        .WithMany("SubCategoriesList")
                        .HasForeignKey("CatId");
                });
#pragma warning restore 612, 618
        }
    }
}
